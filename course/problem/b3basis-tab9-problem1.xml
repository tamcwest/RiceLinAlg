<problem display_name="Example 1" linenum="318" tex_filename="./block3/basis.tex" showanswer="finished" attempts="3" rerandomize="per_student">
  <text>
    <p>
Suppose [mathjaxinline]\mathcal{B} = \{ v_1; v_2; v_3\}[/mathjaxinline] is a basis of a vector space [mathjaxinline]V[/mathjaxinline] (over [mathjaxinline]\mathbb R[/mathjaxinline]). </p>
    <p>
Let [mathjaxinline]w = 3v_3 - 2v_2[/mathjaxinline]. What is [mathjaxinline][w]_{\mathcal{B}}[/mathjaxinline]? </p>
    <p>
      <div class="hideshowbox">
        <h4 onclick="hideshow(this);" style="margin: 0px">How to Enter a Column Vector in R^n<span class="icon-caret-down toggleimage"/></h4>
        <div class="hideshowcontent">
          <p>
To enter a vector in [mathjaxinline]\mathbb R^ n[/mathjaxinline] such as [mathjaxinline]\left[\begin{array}{c} 1 \\ 2 \\ 3 \end{array} \right][/mathjaxinline], you can either: </p>
          <ul class="itemize">
            <li>
              <p>
enter it as you would a [mathjaxinline]3\times 1[/mathjaxinline] matrix: [[1],[2],[3]] </p>
            </li>
            <li>
              <p>
or, you can enter it as &lt;1,2,3&gt; </p>
            </li>
          </ul>
          <p>
Use decimals only. </p>
        </div>
        <p class="hideshowbottom" onclick="hideshow(this);" style="margin: 0px">
          <a href="javascript: {return false;}">Show</a>
        </p>
      </div>
    </p>
    <script linenum="2" filename="./vectorentry2.tex" type="text/python" system_path="python_lib">
def VectorEntry(expect, ans):
	import ast
	import numpy as np 
  	atol = 0.01
	list_expect = ast.literal_eval(expect)
	vec_expect = np.matrix(list_expect)
  	ret = {"ok":False}
	try:
  		# input format [[1],[2],[3]]
		list_ans = ast.literal_eval(ans)
		vec_ans = np.matrix(list_ans)
  		if vec_ans.shape != vec_expect.shape:
  			ret['msg'] = 'Wrong shape of vector!'
  		elif np.allclose(vec_ans, vec_expect,atol,1e-08):
  			ret['ok'] = True
  		else:
  		# More error message. Will improve this part
  			ret['msg'] = 'something is wrong'   			
	#except SyntaxError:
		#ret['msg'] = 'Wrong input format'
	except SyntaxError:
  		# input format &amp;lt;1,2,3&amp;gt;
		list_ans = ans.replace('&amp;lt;', '[').replace('&amp;gt;', ']')
		list_ans = ast.literal_eval(list_ans)
		vec_ans = np.transpose(np.matrix(list_ans))
  		if vec_ans.shape != vec_expect.shape:
  			ret['msg'] = 'Wrong shape of vector!'
  		elif np.allclose(vec_ans, vec_expect,0.01,1e-08):
  			ret['ok'] = True
  		else:
    		# More error message. Will improve this part
  			ret['msg'] = 'something is wrong' 
  	except:
  		ret['msg'] = 'Wrong input format'
  	return ret 
</script>
    <p>
      <customresponse cfn="VectorEntry" expect="[[0],[-2],[3]]">
        <textline correct_answer="[[0],[-2],[3]]"/>
      </customresponse>
    </p>
    <p>
      <solution>
        <font color="blue">Answer: </font>
        <font color="blue">
          <p>
 We can write [mathjaxinline]w[/mathjaxinline] as a linear combination of the basis vectors in order: [mathjaxinline]w = 0 v_1 + (-2)v_2 + 3v_3[/mathjaxinline]. Hence [mathjaxinline][w]_{\mathcal{B}} =\left[\begin{array}{c} 0 \\ -2 \\ 3 \end{array} \right][/mathjaxinline]. </p>
        </font>
      </solution>
    </p>
  </text>
  <SCRIPT src="/static/latex2edx.js" type="text/javascript"/>
  <LINK href="/static/latex2edx.css" rel="stylesheet" type="text/css"/>
</problem>
